# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python FastAPI application

on:
  push:
    branches: [ "main", "migrate-to-beanie" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
    - name: Install necessary dependencies for bcrypt
      run: |
        sudo apt-get install build-essential cargo
        
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set MongoDB test URI environment variables
      run: echo "MONGODB_URI=mongodb://localhost:27017/" >> $GITHUB_ENV

    - name: Test with pytest
      run: |
        pytest
      env:
        CLOUDINARY_NAME: ${{secrets.CLOUDINARY_NAME}}
        CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY}}
        CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET}}
        ACCESS_TOKEN_SECRET: $(openssl rand -hex 32)
        REFRESH_TOKEN_SECRET: $(openssl rand -hex 32)
        ACCESS_TOKEN_EXPIRY: 1
        REFRESH_TOKEN_EXPIRY: 7
        MONGODB_URI: "mongodb://localhost:27017"
        DB_NAME: "commerce"
        TEST_DB_NAME: "test-commerce"
        OAUTH2_REFRESH_TOKEN_GENERATOR: True